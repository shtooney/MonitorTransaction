@isTest
public class TestLogin {
  public static testMethod void testAsSystemAdmin() {
    Map<String, String> eventData = new Map<String, String>();

  	    /* Insert the system admin user in the event data map */
        Profile p = [select id from profile where name='System Administrator'];
        String ourSysAdminString = p.Id; 

        User u = new User(alias = 'test123', email='test12344efendiyev@noemail.com',
            emailencodingkey='UTF-8', lastname='Testing', languagelocalekey='en_US',
            localesidkey='en_US', profileid = p.Id, country='United States',
            timezonesidkey='America/Los_Angeles', username='test12355efendiyev@noemail.com');
        insert u;
      
    Organization org = [SELECT id, Name FROM Organization];
	Id orgId = org.Id;
      
      
      eventData.put('theSystemAdmin', ourSysAdminString);

    TxnSecurity.Event e = new TxnSecurity.Event(
         orgId /* organizationId */,
         u.Id /* userId */,
         'Login' /* entityName */ ,
         'Login' /* action */,
         'LoginHistory' /* resourceType */,
         '01pR00000009D2H' /* entityId */,
          Datetime.newInstance(2015, 9, 15) /* timeStamp */,
          eventData /* data - Map containing information about the event */ );

    /* We are unit testing a PolicyCondition that triggers
       when an event is generated as System Admin */
    MonitorMe condition = new MonitorMe();
    /* Assert that the condition is triggered */
    System.assertEquals(true, condition.evaluate(e));
  }

  public static testMethod void testAsStandardUser() {
    Map<String, String> eventData = new Map<String, String>();

  	    /* Insert the system admin user in the event data map */
        Profile p = [select id from profile where name='Standard User'];
        String ourStandardUserString = p.Id; 

        User u = new User(alias = 'test123', email='test12355efendiyev@noemail.com',
            emailencodingkey='UTF-8', lastname='Testing', languagelocalekey='en_US',
            localesidkey='en_US', profileid = p.Id, country='United States',
            timezonesidkey='America/Los_Angeles', username='test12355efendiyev@noemail.com');
        insert u;
      
    Organization org = [SELECT id, Name FROM Organization];
	Id orgId = org.Id;
      
      eventData.put('theSystemAdmin', ourStandardUserString);

    TxnSecurity.Event e = new TxnSecurity.Event(
         orgId /* organizationId */,
         u.Id /* userId */,
         'AuthSession' /* entityName */ ,
         'Login' /* action */,
         'LoginHistory' /* resourceName */,
         '01pR00000009D2H' /* entityId */,
          Datetime.newInstance(2015, 9, 15) /* timeStamp */,
          eventData /* data - Map containing information about the event */ );

    /* We are unit testing a PolicyCondition that triggers
       when an event is not generated from the System Admin - Standard User in this case  */
    MonitorMe condition = new MonitorMe();
      
    /* Assert that the condition is NOT triggered */
    System.assertEquals(false, condition.evaluate(e));
  }
}
